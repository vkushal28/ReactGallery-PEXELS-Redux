{"version":3,"sources":["logo.svg","components/Order.js","App.js","reducers/userProfileSlice.js","reducers/rootReducer.js","index.js","store.js"],"names":["Order","Container","sx","width","Card","mt","Box","p","App","className","initialState","avatar","customToken","email","firstName","lastName","phoneNumber","token","_id","userProfileSlice","state","action","type","payload","combineReducers","ReactDOM","render","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById"],"mappings":"uMAAe,I,oCCGA,SAASA,IACtB,OACE,cAACC,EAAA,EAAD,CAAWC,GAAI,CAAEC,MAAO,eAAxB,SACE,cAACC,EAAA,EAAD,CAAMF,GAAI,CAAEG,GAAI,GAAhB,SACE,cAACC,EAAA,EAAD,CAAKJ,GAAI,CAAEK,EAAG,GAAd,uCCKOC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACT,EAAD,O,gDCPAU,EAAe,CACnBC,OAAQ,GACRC,YAAa,GACbC,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,MAAO,GACPC,IAAI,IA0BSC,EAvBU,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACzD,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,eACFZ,GAEP,IAAK,sBACH,OAAO,2BACFU,GADL,IAEET,OAAQU,EAAOE,QAAQZ,OACvBC,YAAaS,EAAOE,QAAQX,YAC5BC,MAAOQ,EAAOE,QAAQV,MACtBC,UAAWO,EAAOE,QAAQT,UAC1BC,SAAUM,EAAOE,QAAQR,SACzBC,YAAaK,EAAOE,QAAQP,YAC5BC,MAAOI,EAAOE,QAAQN,MACtBC,IAAIG,EAAOE,QAAQL,MAEvB,QACE,OAAOE,IC1BEI,cAAgB,CAC3BL,qBCIJM,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,MCTD,WACX,IAAMC,EAAmBC,OAAOC,sCAAwCC,IACxE,OAAOC,YACHC,EACAL,EAAiBM,YAAgBC,ODKlBC,GAAjB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.6b9d0ec3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Container, Card, Box } from \"@mui/material\";\n\nexport default function Order() {\n  return (\n    <Container sx={{ width: \"fit-content\" }}>\n      <Card sx={{ mt: 4 }}>\n        <Box sx={{ p: 4 }}>\n            site's starting point\n        </Box>\n      </Card>\n    </Container>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Order from './components/Order';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Order />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  avatar: \"\",\n  customToken: \"\",\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  phoneNumber: \"\",\n  token: \"\",\n  _id:\"\"\n};\n\nconst userProfileSlice = (state = initialState, action) => {\n  switch (action.type) {\n    case \"USER_LOGOUT\":\n      return {\n        ...initialState\n      };\n    case \"USER_EMAIL_VERIFIED\":\n      return {\n        ...state,\n        avatar: action.payload.avatar,\n        customToken: action.payload.customToken,\n        email: action.payload.email,\n        firstName: action.payload.firstName,\n        lastName: action.payload.lastName,\n        phoneNumber: action.payload.phoneNumber,\n        token: action.payload.token,\n        _id:action.payload._id\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userProfileSlice;\n","import { combineReducers } from 'redux';\nimport userProfileSlice from './userProfileSlice';\n\n// all redux slices are registered here and implemented/defined separately\nexport default combineReducers({\n    userProfileSlice\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\n\nReactDOM.render(\n  <HelmetProvider>\n    <BrowserRouter>\n      <Provider store={configureStore()}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </HelmetProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore() {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    return createStore(\n        rootReducer,\n        composeEnhancers(applyMiddleware(thunk))\n    );\n}"],"sourceRoot":""}